<!DOCTYPE html>
<html>

  <head>
    <title id="Description">The File Upload widget can be used for uploading file(s) to a server. In this demo you can browse for files and click the widget's buttons to see how it will work in a real environment. For uploading files however, you should set the "uploadUrl" property to point to a Web Server file that will handle the actual Upload process. TypeScript example.</title>
    <meta name="description" content="File Upload Typescript example." />

    <!-- 1. Load references -->
    <script src="../../../scripts/jquery-1.11.1.min.js"></script>
    <script src="../../../jqwidgets/jqxcore.js"></script>
    <script src="../../../jqwidgets/jqxbuttons.js"></script>
    <script src="../../../jqwidgets/jqxfileupload.js"></script>
    <script src="typescript-fileupload.js"></script>
    <link rel="stylesheet" href="../../../jqwidgets/styles/jqx.base.css" type="text/css" />
    <script type="text/javascript" src="../../../scripts/demos.js"></script>

    <!-- 2. Create initialization -->
    <script>
        $(document).ready(function () {
            createFileUpload('#jqxFileUpload');
        });
     </script>

  </head>

  <!-- 3. Display the application -->
  <body>
    <div class="example-description">
      The File Upload widget can be used for uploading file(s) to a server. In this demo you can browse for files and click the widget's buttons to see how it will work in a real environment. For uploading files however, you should set the "uploadUrl" property to point to a Web Server file that will handle the actual Upload process. TypeScript example.<br />
    </div>

    <div id="jqxFileUpload"></div>
  </body>

</html>
