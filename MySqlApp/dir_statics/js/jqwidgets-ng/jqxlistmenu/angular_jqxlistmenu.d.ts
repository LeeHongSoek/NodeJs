/// <reference path="../jqwidgets.d.ts" />
import { ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxListMenuComponent implements OnChanges {
    attrAlwaysShowNavigationArrows: boolean;
    attrAnimationType: string;
    attrAnimationDuration: number | string;
    attrAutoSeparators: boolean;
    attrBackLabel: number | string;
    attrDisabled: boolean;
    attrEnableScrolling: boolean;
    attrFilterCallback: (text: jqwidgets.ListMenuFilterCallback['text'], searchValue: jqwidgets.ListMenuFilterCallback['searchValue']) => boolean;
    attrHeaderAnimationDuration: number | string;
    attrPlaceHolder: number | string;
    attrReadOnly: boolean;
    attrRtl: boolean;
    attrRoundedCorners: boolean;
    attrShowNavigationArrows: boolean;
    attrShowFilter: boolean;
    attrShowHeader: boolean;
    attrShowBackButton: boolean;
    attrTheme: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxListMenu;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    alwaysShowNavigationArrows(arg?: boolean): boolean;
    animationType(arg?: string): string;
    animationDuration(arg?: number | string): number | string;
    autoSeparators(arg?: boolean): boolean;
    backLabel(arg?: number | string): number | string;
    disabled(arg?: boolean): boolean;
    enableScrolling(arg?: boolean): boolean;
    filterCallback(arg?: (text: jqwidgets.ListMenuFilterCallback['text'], searchValue: jqwidgets.ListMenuFilterCallback['searchValue']) => boolean): (text: jqwidgets.ListMenuFilterCallback['text'], searchValue: jqwidgets.ListMenuFilterCallback['searchValue']) => boolean;
    height(arg?: number | string): number | string;
    headerAnimationDuration(arg?: number | string): number | string;
    placeHolder(arg?: number | string): number | string;
    readOnly(arg?: boolean): boolean;
    rtl(arg?: boolean): boolean;
    roundedCorners(arg?: boolean): boolean;
    showNavigationArrows(arg?: boolean): boolean;
    showFilter(arg?: boolean): boolean;
    showHeader(arg?: boolean): boolean;
    showBackButton(arg?: boolean): boolean;
    theme(arg?: string): string;
    width(arg?: string | number): string | number;
    back(): void;
    changePage(Item: any): void;
    destroy(): void;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxListMenuComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxListMenuComponent, "jqxListMenu", never, { "attrAlwaysShowNavigationArrows": "alwaysShowNavigationArrows"; "attrAnimationType": "animationType"; "attrAnimationDuration": "animationDuration"; "attrAutoSeparators": "autoSeparators"; "attrBackLabel": "backLabel"; "attrDisabled": "disabled"; "attrEnableScrolling": "enableScrolling"; "attrFilterCallback": "filterCallback"; "attrHeaderAnimationDuration": "headerAnimationDuration"; "attrPlaceHolder": "placeHolder"; "attrReadOnly": "readOnly"; "attrRtl": "rtl"; "attrRoundedCorners": "roundedCorners"; "attrShowNavigationArrows": "showNavigationArrows"; "attrShowFilter": "showFilter"; "attrShowHeader": "showHeader"; "attrShowBackButton": "showBackButton"; "attrTheme": "theme"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, {}, never, ["*"]>;
}
