/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxQRcodeComponent implements OnChanges {
    attrBackgroundColor: string;
    attrDisplayLabel: boolean;
    attrEmbedImage: string;
    attrErrorLevel: string;
    attrImageHeight: number;
    attrImageWidth: number;
    attrLabelColor: string;
    attrLabelFont: string;
    attrLabelFontSize: number;
    attrLabelMarginBottom: number;
    attrLabelMarginTop: number;
    attrLabelPosition: string;
    attrLineColor: string;
    attrSquareWidth: number;
    attrRenderAs: string;
    attrValue: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxQRcode;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    backgroundColor(arg?: string): string;
    displayLabel(arg?: boolean): boolean;
    embedImage(arg?: string): string;
    errorLevel(arg?: string): string;
    imageHeight(arg?: number): number;
    imageWidth(arg?: number): number;
    labelColor(arg?: string): string;
    labelFont(arg?: string): string;
    labelFontSize(arg?: number): number;
    labelMarginBottom(arg?: number): number;
    labelMarginTop(arg?: number): number;
    labelPosition(arg?: string): string;
    lineColor(arg?: string): string;
    squareWidth(arg?: number): number;
    renderAs(arg?: string): string;
    value(arg?: string): string;
    export(format: string, fileName?: string): undefined;
    getDataURL(format: string): string;
    getDataURLAsync(format: string): any;
    isValid(): boolean;
    onInvalid: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxQRcodeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxQRcodeComponent, "jqxQRcode", never, { "attrBackgroundColor": "backgroundColor"; "attrDisplayLabel": "displayLabel"; "attrEmbedImage": "embedImage"; "attrErrorLevel": "errorLevel"; "attrImageHeight": "imageHeight"; "attrImageWidth": "imageWidth"; "attrLabelColor": "labelColor"; "attrLabelFont": "labelFont"; "attrLabelFontSize": "labelFontSize"; "attrLabelMarginBottom": "labelMarginBottom"; "attrLabelMarginTop": "labelMarginTop"; "attrLabelPosition": "labelPosition"; "attrLineColor": "lineColor"; "attrSquareWidth": "squareWidth"; "attrRenderAs": "renderAs"; "attrValue": "value"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onInvalid": "onInvalid"; }, never, ["*"]>;
}
