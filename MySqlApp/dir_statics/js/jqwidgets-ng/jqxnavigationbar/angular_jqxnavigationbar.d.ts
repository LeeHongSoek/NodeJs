/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxNavigationBarComponent implements OnChanges {
    attrAnimationType: string;
    attrArrowPosition: string;
    attrCollapseAnimationDuration: number;
    attrDisabled: boolean;
    attrExpandAnimationDuration: number;
    attrExpandMode: string;
    attrExpandedIndexes: Array<number>;
    attrInitContent: (index: number) => void;
    attrRtl: boolean;
    attrShowArrow: boolean;
    attrTheme: string;
    attrToggleMode: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxNavigationBar;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationType(arg?: string): string;
    arrowPosition(arg?: string): string;
    collapseAnimationDuration(arg?: number): number;
    disabled(arg?: boolean): boolean;
    expandAnimationDuration(arg?: number): number;
    expandMode(arg?: string): string;
    expandedIndexes(arg?: Array<number>): Array<number>;
    height(arg?: string | number): string | number;
    initContent(arg?: (index: number) => void): (index: number) => void;
    rtl(arg?: boolean): boolean;
    showArrow(arg?: boolean): boolean;
    theme(arg?: string): string;
    toggleMode(arg?: string): string;
    width(arg?: string | number): string | number;
    add(header: number | string, content: number | string): void;
    collapseAt(index: number | string): void;
    disableAt(index: number | string): void;
    disable(): void;
    destroy(): void;
    expandAt(index: number | string): void;
    enableAt(index: number | string): void;
    enable(): void;
    focus(): void;
    getHeaderContentAt(index: number | string): string;
    getContentAt(index: number | string): string;
    hideArrowAt(index: number | string): void;
    invalidate(): void;
    insert(Index: number, header: number | string, content: number | string): void;
    refresh(): void;
    render(): void;
    remove(index: number | string): void;
    setContentAt(index: number, item: number | string): void;
    setHeaderContentAt(index: number, item: number | string): void;
    showArrowAt(index: number | string): void;
    update(index: number, header: number | string, content: number | string): void;
    val(value?: number | string): any;
    onCollapsingItem: EventEmitter<any>;
    onCollapsedItem: EventEmitter<any>;
    onExpandingItem: EventEmitter<any>;
    onExpandedItem: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxNavigationBarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxNavigationBarComponent, "jqxNavigationBar", never, { "attrAnimationType": "animationType"; "attrArrowPosition": "arrowPosition"; "attrCollapseAnimationDuration": "collapseAnimationDuration"; "attrDisabled": "disabled"; "attrExpandAnimationDuration": "expandAnimationDuration"; "attrExpandMode": "expandMode"; "attrExpandedIndexes": "expandedIndexes"; "attrInitContent": "initContent"; "attrRtl": "rtl"; "attrShowArrow": "showArrow"; "attrTheme": "theme"; "attrToggleMode": "toggleMode"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onCollapsingItem": "onCollapsingItem"; "onCollapsedItem": "onCollapsedItem"; "onExpandingItem": "onExpandingItem"; "onExpandedItem": "onExpandedItem"; }, never, ["*"]>;
}
