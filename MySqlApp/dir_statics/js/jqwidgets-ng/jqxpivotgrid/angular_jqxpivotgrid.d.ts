/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxPivotGridComponent implements OnChanges {
    attrSource: any;
    attrLocalization: any;
    attrScrollBarsEnabled: boolean;
    attrSelectionEnabled: boolean;
    attrMultipleSelectionEnabled: boolean;
    attrTreeStyleRows: boolean;
    attrAutoResize: boolean;
    attrItemsRenderer: (pivotItem: jqwidgets.PivotGridItemsRenderer['pivotItem']) => string;
    attrCellsRenderer: (pivotCell: jqwidgets.PivotGridCellsRenderer['pivotCell']) => string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxPivotGrid;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    source(arg?: any): any;
    localization(arg?: any): any;
    scrollBarsEnabled(arg?: boolean): boolean;
    selectionEnabled(arg?: boolean): boolean;
    multipleSelectionEnabled(arg?: boolean): boolean;
    treeStyleRows(arg?: boolean): boolean;
    autoResize(arg?: boolean): boolean;
    itemsRenderer(arg?: (pivotItem: jqwidgets.PivotGridItemsRenderer['pivotItem']) => string): (pivotItem: jqwidgets.PivotGridItemsRenderer['pivotItem']) => string;
    cellsRenderer(arg?: (pivotCell: jqwidgets.PivotGridCellsRenderer['pivotCell']) => string): (pivotCell: jqwidgets.PivotGridCellsRenderer['pivotCell']) => string;
    getInstance(): any;
    refresh(): void;
    getPivotRows(): jqwidgets.PivotGridRows;
    getPivotColumns(): jqwidgets.PivotGridColumns;
    getPivotCells(): jqwidgets.PivotGridCells;
    onPivotitemexpanding: EventEmitter<any>;
    onPivotitemexpanded: EventEmitter<any>;
    onPivotitemcollapsing: EventEmitter<any>;
    onPivotitemcollapsed: EventEmitter<any>;
    onSortchanging: EventEmitter<any>;
    onSortchanged: EventEmitter<any>;
    onSortremoving: EventEmitter<any>;
    onSortremoved: EventEmitter<any>;
    onPivotitemselectionchanged: EventEmitter<any>;
    onPivotcellmousedown: EventEmitter<any>;
    onPivotcellmouseup: EventEmitter<any>;
    onPivotcellclick: EventEmitter<any>;
    onPivotcelldblclick: EventEmitter<any>;
    onPivotitemmousedown: EventEmitter<any>;
    onPivotitemmouseup: EventEmitter<any>;
    onPivotitemclick: EventEmitter<any>;
    onPivotitemdblclick: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxPivotGridComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxPivotGridComponent, "jqxPivotGrid", never, { "attrSource": "source"; "attrLocalization": "localization"; "attrScrollBarsEnabled": "scrollBarsEnabled"; "attrSelectionEnabled": "selectionEnabled"; "attrMultipleSelectionEnabled": "multipleSelectionEnabled"; "attrTreeStyleRows": "treeStyleRows"; "attrAutoResize": "autoResize"; "attrItemsRenderer": "itemsRenderer"; "attrCellsRenderer": "cellsRenderer"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onPivotitemexpanding": "onPivotitemexpanding"; "onPivotitemexpanded": "onPivotitemexpanded"; "onPivotitemcollapsing": "onPivotitemcollapsing"; "onPivotitemcollapsed": "onPivotitemcollapsed"; "onSortchanging": "onSortchanging"; "onSortchanged": "onSortchanged"; "onSortremoving": "onSortremoving"; "onSortremoved": "onSortremoved"; "onPivotitemselectionchanged": "onPivotitemselectionchanged"; "onPivotcellmousedown": "onPivotcellmousedown"; "onPivotcellmouseup": "onPivotcellmouseup"; "onPivotcellclick": "onPivotcellclick"; "onPivotcelldblclick": "onPivotcelldblclick"; "onPivotitemmousedown": "onPivotitemmousedown"; "onPivotitemmouseup": "onPivotitemmouseup"; "onPivotitemclick": "onPivotitemclick"; "onPivotitemdblclick": "onPivotitemdblclick"; }, never, ["*"]>;
}
