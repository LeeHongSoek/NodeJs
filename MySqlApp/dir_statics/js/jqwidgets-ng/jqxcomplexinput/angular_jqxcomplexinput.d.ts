/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class jqxComplexInputComponent implements ControlValueAccessor, OnChanges {
    attrDecimalNotation: string;
    attrDisabled: boolean;
    attrPlaceHolder: string;
    attrRoundedCorners: boolean;
    attrRtl: boolean;
    attrSpinButtons: boolean;
    attrSpinButtonsStep: number;
    attrTemplate: string;
    attrTheme: string;
    attrValue: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxComplexInput;
    private onTouchedCallback;
    private onChangeCallback;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    get ngValue(): any;
    set ngValue(value: any);
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setOptions(options: any): void;
    decimalNotation(arg?: string): string;
    disabled(arg?: boolean): boolean;
    height(arg?: string | number): string | number;
    placeHolder(arg?: string): string;
    roundedCorners(arg?: boolean): boolean;
    rtl(arg?: boolean): boolean;
    spinButtons(arg?: boolean): boolean;
    spinButtonsStep(arg?: number): number;
    template(arg?: string): string;
    theme(arg?: string): string;
    value(arg?: string): string;
    width(arg?: string | number): string | number;
    destroy(): void;
    getDecimalNotation(part: string, decimalNotation: string): string;
    getReal(complexnumber?: number): number;
    getImaginary(complexnumber?: number): number;
    render(): void;
    refresh(): void;
    val(value?: any): any;
    onChange: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxComplexInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxComplexInputComponent, "jqxComplexInput", never, { "attrDecimalNotation": "decimalNotation"; "attrDisabled": "disabled"; "attrPlaceHolder": "placeHolder"; "attrRoundedCorners": "roundedCorners"; "attrRtl": "rtl"; "attrSpinButtons": "spinButtons"; "attrSpinButtonsStep": "spinButtonsStep"; "attrTemplate": "template"; "attrTheme": "theme"; "attrValue": "value"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onChange": "onChange"; }, never, never>;
}
