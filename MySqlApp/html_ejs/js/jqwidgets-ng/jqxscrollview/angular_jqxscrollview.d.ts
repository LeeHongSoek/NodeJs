/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxScrollViewComponent implements OnChanges {
    attrAnimationDuration: number;
    attrBounceEnabled: boolean;
    attrButtonsOffset: Array<number>;
    attrCurrentPage: number;
    attrDisabled: boolean;
    attrMoveThreshold: number;
    attrShowButtons: boolean;
    attrSlideShow: boolean;
    attrSlideDuration: number;
    attrTheme: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxScrollView;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationDuration(arg?: number): number;
    bounceEnabled(arg?: boolean): boolean;
    buttonsOffset(arg?: Array<number>): Array<number>;
    currentPage(arg?: number): number;
    disabled(arg?: boolean): boolean;
    height(arg?: string | number): string | number;
    moveThreshold(arg?: number): number;
    showButtons(arg?: boolean): boolean;
    slideShow(arg?: boolean): boolean;
    slideDuration(arg?: number): number;
    theme(arg?: string): string;
    width(arg?: string | number): string | number;
    back(): void;
    changePage(index: number): void;
    forward(): void;
    refresh(): void;
    onPageChanged: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxScrollViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxScrollViewComponent, "jqxScrollView", never, { "attrAnimationDuration": "animationDuration"; "attrBounceEnabled": "bounceEnabled"; "attrButtonsOffset": "buttonsOffset"; "attrCurrentPage": "currentPage"; "attrDisabled": "disabled"; "attrMoveThreshold": "moveThreshold"; "attrShowButtons": "showButtons"; "attrSlideShow": "slideShow"; "attrSlideDuration": "slideDuration"; "attrTheme": "theme"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onPageChanged": "onPageChanged"; }, never, ["*"]>;
}
