/// <reference path="../jqwidgets.d.ts" />
import { AfterViewInit, AfterViewChecked, EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class jqxListBoxComponent implements ControlValueAccessor, OnChanges, AfterViewInit, AfterViewChecked {
    attrAutoHeight: boolean;
    attrAllowDrag: boolean;
    attrAllowDrop: boolean;
    attrCheckboxes: boolean;
    attrDisabled: boolean;
    attrDisplayMember: number | string;
    attrDropAction: string;
    attrDragStart: (item: jqwidgets.ListBoxDragStart['item']) => boolean;
    attrDragEnd: (dragItem: jqwidgets.ListBoxDragEnd['dragItem'], dropItem: jqwidgets.ListBoxDragEnd['dropItem']) => boolean;
    attrEnableHover: boolean;
    attrEnableSelection: boolean;
    attrEqualItemsWidth: boolean;
    attrFilterable: boolean;
    attrFilterHeight: number;
    attrFilterDelay: number | string;
    attrFilterPlaceHolder: number | string;
    attrHasThreeStates: boolean;
    attrItemHeight: number;
    attrIncrementalSearch: boolean;
    attrIncrementalSearchDelay: number | string;
    attrMultiple: boolean;
    attrMultipleextended: boolean;
    attrRenderer: (index: jqwidgets.ListBoxRenderer['index'], label: jqwidgets.ListBoxRenderer['label'], value: jqwidgets.ListBoxRenderer['value']) => string;
    attrRendered: () => any;
    attrRtl: boolean;
    attrSelectedIndex: number | string;
    attrSelectedIndexes: any;
    attrSource: Array<any>;
    attrScrollBarSize: number;
    attrSearchMode: string;
    attrTheme: string;
    attrValueMember: number | string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxListBox;
    content: String;
    container: HTMLDivElement;
    private onTouchedCallback;
    private onChangeCallback;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setOptions(options: any): void;
    autoHeight(arg?: boolean): boolean;
    allowDrag(arg?: boolean): boolean;
    allowDrop(arg?: boolean): boolean;
    checkboxes(arg?: boolean): boolean;
    disabled(arg?: boolean): boolean;
    displayMember(arg?: number | string): number | string;
    dropAction(arg?: string): string;
    dragStart(arg?: (item: jqwidgets.ListBoxDragStart['item']) => boolean): (item: jqwidgets.ListBoxDragStart['item']) => boolean;
    dragEnd(arg?: (dragItem: jqwidgets.ListBoxDragEnd['dragItem'], dropItem: jqwidgets.ListBoxDragEnd['dropItem']) => boolean): (dragItem: jqwidgets.ListBoxDragEnd['dragItem'], dropItem: jqwidgets.ListBoxDragEnd['dropItem']) => boolean;
    enableHover(arg?: boolean): boolean;
    enableSelection(arg?: boolean): boolean;
    equalItemsWidth(arg?: boolean): boolean;
    filterable(arg?: boolean): boolean;
    filterHeight(arg?: number): number;
    filterDelay(arg?: number | string): number | string;
    filterPlaceHolder(arg?: number | string): number | string;
    height(arg?: string | number): string | number;
    hasThreeStates(arg?: boolean): boolean;
    itemHeight(arg?: number): number;
    incrementalSearch(arg?: boolean): boolean;
    incrementalSearchDelay(arg?: number | string): number | string;
    multiple(arg?: boolean): boolean;
    multipleextended(arg?: boolean): boolean;
    renderer(arg?: (index: jqwidgets.ListBoxRenderer['index'], label: jqwidgets.ListBoxRenderer['label'], value: jqwidgets.ListBoxRenderer['value']) => string): (index: jqwidgets.ListBoxRenderer['index'], label: jqwidgets.ListBoxRenderer['label'], value: jqwidgets.ListBoxRenderer['value']) => string;
    rendered(arg?: () => any): () => any;
    rtl(arg?: boolean): boolean;
    selectedIndex(arg?: number | string): number | string;
    selectedIndexes(arg?: any): any;
    source(arg?: Array<any>): Array<any>;
    scrollBarSize(arg?: number): number;
    searchMode(arg?: string): string;
    theme(arg?: string): string;
    valueMember(arg?: number | string): number | string;
    width(arg?: string | number): string | number;
    addItem(Item: any): boolean;
    beginUpdate(): void;
    clear(): void;
    clearSelection(): void;
    checkIndex(Index: number): void;
    checkItem(Item: any): void;
    checkAll(): void;
    clearFilter(): void;
    destroy(): void;
    disableItem(Item: any): void;
    disableAt(Index: number): void;
    enableItem(Item: any): void;
    enableAt(Index: number | string): void;
    ensureVisible(item: any): void;
    endUpdate(): void;
    focus(): void;
    getItems(): Array<any>;
    getSelectedItems(): Array<any>;
    getCheckedItems(): Array<any>;
    getItem(Index: number): any;
    getItemByValue(Item: any): any;
    getSelectedItem(): any;
    getSelectedIndex(): number;
    insertAt(Item: any, Index: number | string): void;
    invalidate(): void;
    indeterminateItem(Item: any): void;
    indeterminateIndex(Index: number): void;
    loadFromSelect(selector: string): void;
    removeItem(Item: any): void;
    removeAt(Index: number | string): void;
    render(): void;
    refresh(): void;
    selectItem(Item: any): void;
    selectIndex(Index: number | string): void;
    updateItem(Item: any, Value: number | string): void;
    updateAt(item: any, index: number | string): void;
    unselectIndex(index: number | string): void;
    unselectItem(item: any): void;
    uncheckIndex(index: number | string): void;
    uncheckItem(item: any): void;
    uncheckAll(): void;
    val(value?: number | string): any;
    onBindingComplete: EventEmitter<any>;
    onChange: EventEmitter<any>;
    onCheckChange: EventEmitter<any>;
    onDragStart: EventEmitter<any>;
    onDragEnd: EventEmitter<any>;
    onSelect: EventEmitter<any>;
    onUnselect: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxListBoxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxListBoxComponent, "jqxListBox", never, { "attrAutoHeight": "autoHeight"; "attrAllowDrag": "allowDrag"; "attrAllowDrop": "allowDrop"; "attrCheckboxes": "checkboxes"; "attrDisabled": "disabled"; "attrDisplayMember": "displayMember"; "attrDropAction": "dropAction"; "attrDragStart": "dragStart"; "attrDragEnd": "dragEnd"; "attrEnableHover": "enableHover"; "attrEnableSelection": "enableSelection"; "attrEqualItemsWidth": "equalItemsWidth"; "attrFilterable": "filterable"; "attrFilterHeight": "filterHeight"; "attrFilterDelay": "filterDelay"; "attrFilterPlaceHolder": "filterPlaceHolder"; "attrHasThreeStates": "hasThreeStates"; "attrItemHeight": "itemHeight"; "attrIncrementalSearch": "incrementalSearch"; "attrIncrementalSearchDelay": "incrementalSearchDelay"; "attrMultiple": "multiple"; "attrMultipleextended": "multipleextended"; "attrRenderer": "renderer"; "attrRendered": "rendered"; "attrRtl": "rtl"; "attrSelectedIndex": "selectedIndex"; "attrSelectedIndexes": "selectedIndexes"; "attrSource": "source"; "attrScrollBarSize": "scrollBarSize"; "attrSearchMode": "searchMode"; "attrTheme": "theme"; "attrValueMember": "valueMember"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onBindingComplete": "onBindingComplete"; "onChange": "onChange"; "onCheckChange": "onCheckChange"; "onDragStart": "onDragStart"; "onDragEnd": "onDragEnd"; "onSelect": "onSelect"; "onUnselect": "onUnselect"; }, never, ["*"]>;
}
