/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxExpanderComponent implements OnChanges {
    attrAnimationType: string;
    attrArrowPosition: string;
    attrCollapseAnimationDuration: number;
    attrDisabled: boolean;
    attrExpanded: boolean;
    attrExpandAnimationDuration: number;
    attrHeaderPosition: string;
    attrInitContent: () => void;
    attrRtl: boolean;
    attrShowArrow: boolean;
    attrTheme: string;
    attrToggleMode: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxExpander;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationType(arg?: string): string;
    arrowPosition(arg?: string): string;
    collapseAnimationDuration(arg?: number): number;
    disabled(arg?: boolean): boolean;
    expanded(arg?: boolean): boolean;
    expandAnimationDuration(arg?: number): number;
    height(arg?: number | string): number | string;
    headerPosition(arg?: string): string;
    initContent(arg?: () => void): () => void;
    rtl(arg?: boolean): boolean;
    showArrow(arg?: boolean): boolean;
    theme(arg?: string): string;
    toggleMode(arg?: string): string;
    width(arg?: number | string): number | string;
    collapse(): void;
    disable(): void;
    destroy(): void;
    enable(): void;
    expand(): void;
    focus(): void;
    getContent(): string;
    getHeaderContent(): string;
    invalidate(): void;
    refresh(): void;
    render(): void;
    setHeaderContent(headerContent: string): void;
    setContent(content: string): void;
    onCollapsing: EventEmitter<any>;
    onCollapsed: EventEmitter<any>;
    onExpanding: EventEmitter<any>;
    onExpanded: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxExpanderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxExpanderComponent, "jqxExpander", never, { "attrAnimationType": "animationType"; "attrArrowPosition": "arrowPosition"; "attrCollapseAnimationDuration": "collapseAnimationDuration"; "attrDisabled": "disabled"; "attrExpanded": "expanded"; "attrExpandAnimationDuration": "expandAnimationDuration"; "attrHeaderPosition": "headerPosition"; "attrInitContent": "initContent"; "attrRtl": "rtl"; "attrShowArrow": "showArrow"; "attrTheme": "theme"; "attrToggleMode": "toggleMode"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onCollapsing": "onCollapsing"; "onCollapsed": "onCollapsed"; "onExpanding": "onExpanding"; "onExpanded": "onExpanded"; }, never, ["*"]>;
}
