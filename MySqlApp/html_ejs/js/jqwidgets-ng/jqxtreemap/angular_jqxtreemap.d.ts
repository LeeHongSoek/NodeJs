/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxTreeMapComponent implements OnChanges {
    attrBaseColor: string;
    attrColorRanges: Array<jqwidgets.TreeMapColorRanges>;
    attrColorRange: number;
    attrColorMode: string;
    attrDisplayMember: string;
    attrHoverEnabled: boolean;
    attrHeaderHeight: number;
    attrLegendLabel: string;
    attrLegendPosition: jqwidgets.TreeMapLegendPosition;
    attrLegendScaleCallback: (v: jqwidgets.TreeMapLegendScaleCallback['v']) => string | number;
    attrRenderCallbacks: any;
    attrSelectionEnabled: boolean;
    attrShowLegend: boolean;
    attrSource: any;
    attrTheme: string;
    attrValueMember: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxTreeMap;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    baseColor(arg?: string): string;
    colorRanges(arg?: Array<jqwidgets.TreeMapColorRanges>): Array<jqwidgets.TreeMapColorRanges>;
    colorRange(arg?: number): number;
    colorMode(arg?: string): string;
    displayMember(arg?: string): string;
    height(arg?: string | number): string | number;
    hoverEnabled(arg?: boolean): boolean;
    headerHeight(arg?: number): number;
    legendLabel(arg?: string): string;
    legendPosition(arg?: jqwidgets.TreeMapLegendPosition): jqwidgets.TreeMapLegendPosition;
    legendScaleCallback(arg?: (v: jqwidgets.TreeMapLegendScaleCallback['v']) => string | number): (v: jqwidgets.TreeMapLegendScaleCallback['v']) => string | number;
    renderCallbacks(arg?: any): any;
    selectionEnabled(arg?: boolean): boolean;
    showLegend(arg?: boolean): boolean;
    source(arg?: any): any;
    theme(arg?: string): string;
    valueMember(arg?: string): string;
    width(arg?: string | number): string | number;
    destroy(): void;
    render(): void;
    onBindingComplete: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxTreeMapComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxTreeMapComponent, "jqxTreeMap", never, { "attrBaseColor": "baseColor"; "attrColorRanges": "colorRanges"; "attrColorRange": "colorRange"; "attrColorMode": "colorMode"; "attrDisplayMember": "displayMember"; "attrHoverEnabled": "hoverEnabled"; "attrHeaderHeight": "headerHeight"; "attrLegendLabel": "legendLabel"; "attrLegendPosition": "legendPosition"; "attrLegendScaleCallback": "legendScaleCallback"; "attrRenderCallbacks": "renderCallbacks"; "attrSelectionEnabled": "selectionEnabled"; "attrShowLegend": "showLegend"; "attrSource": "source"; "attrTheme": "theme"; "attrValueMember": "valueMember"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onBindingComplete": "onBindingComplete"; }, never, ["*"]>;
}
