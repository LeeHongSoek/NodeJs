/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class jqxWindowComponent implements OnChanges {
    attrAutoOpen: boolean;
    attrAnimationType: string;
    attrCollapsed: boolean;
    attrCollapseAnimationDuration: number;
    attrContent: string;
    attrCloseAnimationDuration: number;
    attrCloseButtonSize: number;
    attrCloseButtonAction: string;
    attrCancelButton: any;
    attrDragArea: jqwidgets.WindowDragArea;
    attrDraggable: boolean;
    attrDisabled: boolean;
    attrInitContent: () => void;
    attrIsModal: boolean;
    attrKeyboardCloseKey: number | string;
    attrKeyboardNavigation: boolean;
    attrMinHeight: string | number;
    attrMaxHeight: string | number;
    attrMinWidth: number | string;
    attrMaxWidth: number | string;
    attrModalOpacity: number | string;
    attrModalZIndex: number;
    attrModalBackgroundZIndex: number;
    attrOkButton: any;
    attrPosition: string | any;
    attrRtl: boolean;
    attrResizable: boolean;
    attrShowAnimationDuration: number;
    attrShowCloseButton: boolean;
    attrShowCollapseButton: boolean;
    attrTheme: string;
    attrTitle: string;
    attrZIndex: number;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxWindow;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    autoOpen(arg?: boolean): boolean;
    animationType(arg?: string): string;
    collapsed(arg?: boolean): boolean;
    collapseAnimationDuration(arg?: number): number;
    content(arg?: string): string;
    closeAnimationDuration(arg?: number): number;
    closeButtonSize(arg?: number): number;
    closeButtonAction(arg?: string): string;
    cancelButton(arg?: any): any;
    dragArea(arg?: jqwidgets.WindowDragArea): jqwidgets.WindowDragArea;
    draggable(arg?: boolean): boolean;
    disabled(arg?: boolean): boolean;
    height(arg?: string | number): string | number;
    initContent(arg?: () => void): () => void;
    isModal(arg?: boolean): boolean;
    keyboardCloseKey(arg?: number | string): number | string;
    keyboardNavigation(arg?: boolean): boolean;
    minHeight(arg?: string | number): string | number;
    maxHeight(arg?: string | number): string | number;
    minWidth(arg?: number | string): number | string;
    maxWidth(arg?: number | string): number | string;
    modalOpacity(arg?: undefined): undefined;
    modalZIndex(arg?: number): number;
    modalBackgroundZIndex(arg?: number): number;
    okButton(arg?: any): any;
    position(arg?: string | any): string | any;
    rtl(arg?: boolean): boolean;
    resizable(arg?: boolean): boolean;
    showAnimationDuration(arg?: number): number;
    showCloseButton(arg?: boolean): boolean;
    showCollapseButton(arg?: boolean): boolean;
    theme(arg?: string): string;
    title(arg?: string): string;
    width(arg?: string | number): string | number;
    zIndex(arg?: number): number;
    bringToFront(): void;
    close(): void;
    collapse(): void;
    closeAll(): void;
    disable(): void;
    destroy(): void;
    enable(): void;
    expand(): void;
    focus(): void;
    isOpen(): boolean;
    move(top: number, left: number): void;
    open(): void;
    hide(): void;
    resize(top: number, left: number): void;
    setTitle(title: string): void;
    setContent(content: string): void;
    onClose: EventEmitter<any>;
    onCollapse: EventEmitter<any>;
    onExpand: EventEmitter<any>;
    onMoving: EventEmitter<any>;
    onMoved: EventEmitter<any>;
    onOpen: EventEmitter<any>;
    onResizing: EventEmitter<any>;
    onResized: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<jqxWindowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<jqxWindowComponent, "jqxWindow", never, { "attrAutoOpen": "autoOpen"; "attrAnimationType": "animationType"; "attrCollapsed": "collapsed"; "attrCollapseAnimationDuration": "collapseAnimationDuration"; "attrContent": "content"; "attrCloseAnimationDuration": "closeAnimationDuration"; "attrCloseButtonSize": "closeButtonSize"; "attrCloseButtonAction": "closeButtonAction"; "attrCancelButton": "cancelButton"; "attrDragArea": "dragArea"; "attrDraggable": "draggable"; "attrDisabled": "disabled"; "attrInitContent": "initContent"; "attrIsModal": "isModal"; "attrKeyboardCloseKey": "keyboardCloseKey"; "attrKeyboardNavigation": "keyboardNavigation"; "attrMinHeight": "minHeight"; "attrMaxHeight": "maxHeight"; "attrMinWidth": "minWidth"; "attrMaxWidth": "maxWidth"; "attrModalOpacity": "modalOpacity"; "attrModalZIndex": "modalZIndex"; "attrModalBackgroundZIndex": "modalBackgroundZIndex"; "attrOkButton": "okButton"; "attrPosition": "position"; "attrRtl": "rtl"; "attrResizable": "resizable"; "attrShowAnimationDuration": "showAnimationDuration"; "attrShowCloseButton": "showCloseButton"; "attrShowCollapseButton": "showCollapseButton"; "attrTheme": "theme"; "attrTitle": "title"; "attrZIndex": "zIndex"; "attrWidth": "width"; "attrHeight": "height"; "autoCreate": "auto-create"; }, { "onClose": "onClose"; "onCollapse": "onCollapse"; "onExpand": "onExpand"; "onMoving": "onMoving"; "onMoved": "onMoved"; "onOpen": "onOpen"; "onResizing": "onResizing"; "onResized": "onResized"; }, never, ["*"]>;
}
