<!DOCTYPE html>
<html ng-app="demoApp" lang="en">
<head>
    <title id='Description'>In this sample is illustrated how to create custom editors for AngularJS DataTable. The "First Name" and "Last Name" columns use the jqxInput widget as a cell editor. The "Products" column
        use a jqxDropDownList widget with enabled Checkboxes  as an editor. The "Quantity" column's editor is jqxSlider.
    </title>
    <meta name="description" content="AngularJS DataTable with Custom Cell Editors." />		
    <link rel="stylesheet" href="../../../jqwidgets/styles/jqx.base.css" type="text/css" />
    <script type="text/javascript" src="../../../scripts/angular.min.js"></script> 
    <script type="text/javascript" src="../../../scripts/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxdatatable.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxcheckbox.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxinput.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxslider.js"></script>
    <script type="text/javascript" src="../../../scripts/demos.js"></script>
    <script type="text/javascript" src="../../../jqwidgets/jqxangular.js"></script>
    <script type="text/javascript" src="../../sampledata/generatedata.js"></script>
    <script type="text/javascript">
        var demoApp = angular.module("demoApp", ["jqwidgets"]); 
        demoApp.controller("demoController", function ($scope) {
            var data = generateData(200);
            var firstNameInput, lastNameInput, dropDownList, slider;

            var getEditorDataAdapter = function (datafield) {
                var source =
                {
                    localData: data,
                    dataType: "array",
                    dataFields:
                    [
                        { name: 'firstname', type: 'string' },
                        { name: 'lastname', type: 'string' },
                        { name: 'productname', type: 'string' },
                        { name: 'available', type: 'bool' },
                        { name: 'quantity', type: 'number' },
                        { name: 'price', type: 'number' },
                        { name: 'date', type: 'date' }
                    ],
                    uniqueDataFields: [datafield]
                };
                return new $.jqx.dataAdapter(source);
            }

            // initialize AngularJS DataTable
            $scope.gridSettings =
            {
                width: 850,
                source:  new $.jqx.dataAdapter({
                    localData: data,
                    datatype: "array",
                    updateRow: function (rowId, rowData, commit) {
                        // synchronize with the server - send update command
                        // call commit with parameter true if the synchronization with the server is successful 
                        // and with parameter false if the synchronization failder.
                        commit(true);
                    },
                    dataFields:
                    [
                        { name: 'firstname', type: 'string' },
                        { name: 'lastname', type: 'string' },
                        { name: 'productname', type: 'string' },
                        { name: 'available', type: 'bool' },
                        { name: 'quantity', type: 'number' },
                        { name: 'price', type: 'number' },
                        { name: 'date', type: 'date' }
                    ]
                }),
                pageable: true,
                pagerButtonsCount: 10,
                editable: true,
                autoRowHeight: false,
                columns: [
                  {
                      text: 'First Name', columntype: 'template', datafield: 'firstname', width: 180, createEditor: function (row, cellvalue, editor, cellText, width, height) {
                          // construct the editor.
                          var inputElement = $("<input style='padding-left: 4px; border: none;'/>").appendTo(editor);
                          firstNameInput = new jqxInput(inputElement, { source: getEditorDataAdapter('firstname'), displayMember: "firstname", width: width, height: height });
                      },
                      initEditor: function (row, cellvalue, editor, celltext, width, height) {
                          // set the editor's current value. The callback is called each time the editor is displayed.
                          var inputField = editor.find('input');
                          inputField.val(cellvalue);                          
                      },
                      getEditorValue: function (row, cellvalue, editor) {
                          // return the editor's value.
                          return editor.find('input').val();
                      }
                  },
                  {
                      text: 'Last Name', datafield: 'lastname', columntype: 'template', width: 180, createEditor: function (row, cellvalue, editor, cellText, width, height) {
                          // construct the editor.
                          var inputElement = $("<input  style='padding-left: 4px; border: none;'/>").prependTo(editor);
                          var lastNameInput = new jqxInput(inputElement, { source: getEditorDataAdapter('lastname'), displayMember: "lastname", width: width, height: height });
                      },
                      initEditor: function (row, cellvalue, editor, celltext, width, height) {
                          var inputField = editor.find('input');
                          inputField.val(cellvalue);
                      },
                      getEditorValue: function (row, cellvalue, editor) {
                          // return the editor's value.
                          return editor.find('input').val();
                      }
                  },
                  {
                      text: 'Products', columntype: 'template', datafield: 'productname',
                      createEditor: function (row, cellvalue, editor, cellText, width, height) {
                          // construct the editor. 
                          dropDownList = new jqxDropDownList(editor, {
                              source: getEditorDataAdapter('productname'), displayMember: 'productname', valueMember: 'productname', width: width, height: height
                          });
                      },
                      initEditor: function (row, cellvalue, editor, celltext, width, height) {
                          // set the editor's current value. The callback is called each time the editor is displayed.
                          dropDownList.width = width;
                          dropDownList.height = height;
                          dropDownList.val(cellvalue);
                      },
                      getEditorValue: function (row, cellvalue, editor) {
                          // return the editor's value.
                          return editor.val();
                      }
                 },
                 {
                     text: 'Quantity', width: 200, columntype: 'custom', datafield: 'quantity',
                     createEditor: function (row, cellvalue, editor, cellText, width, height) {
                         // construct the editor. 
                         slider = new jqxSlider(editor, { step: 1, mode: 'fixed', showTicks: false, min: 0, max: 30, width: width, height: height });
                     },
                     initEditor: function (row, cellvalue, editor, celltext, width, height) {
                         // set the editor's current value. The callback is called each time the editor is displayed.
                         var value = parseInt(cellvalue);
                         if (isNaN(value)) value = 0;
                         editor.val(value);
                     },
                     getEditorValue: function (row, cellvalue, editor) {
                         // return the editor's value.
                         return editor.val();
                     }
                 }
                ]
            };
        });
    </script>
</head>
<body ng-controller="demoController">
    <jqx-data-table jqx-settings="gridSettings"></jqx-data-table>
</body>
</html>
